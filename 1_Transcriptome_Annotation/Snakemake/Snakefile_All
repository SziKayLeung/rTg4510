import os
import sys

shell.executable("/bin/bash")

configfile: "config_all.yaml"

rule all:
    input:
        #config["isoseq_output_dir"] + "/CLUSTER/flnc.fofn",
        #config["post_isoseq_output_dir"] + "/MAPPING/" + config["filename"] + "clustered.hq.fastq.sorted.sam",
        config["post_isoseq_output_dir"]  + "/TOFU/" + config["filename"] + ".collapsed.filtered.rep.fa"
        #directory(config["post_isoseq_output_dir"] + "/CHAIN/{sample}", sample=config["WT_Merged"].keys()),
        #config["post_isoseq_output_dir"] + "/SQANTI/Sqanti.filter.log"

rule merge_at_refine_and_cluster:
    input:
       flnc_bam = expand(config["refine_input_dir"] + "/{all_samples}_flnc.bam", all_samples=config["WT_Merged"].keys()),
    output:
       merged_bam = config["isoseq_output_dir"] + "/CLUSTER/flnc.fofn",
       fastq = config["isoseq_output_dir"] + "/CLUSTER/" + config["filename"] + "_clustered.hq.fasta",
       #clustered_report = config["isoseq_output_dir"] + "/CLUSTER/" + config["filename"] + "_clustered.cluster_report.csv"
    params:
       prefix = config["filename"],
       output_dir = config["isoseq_output_dir"] + "/CLUSTER/"
    conda:
       "sqanti2_py3_snakemake.yaml"
    shell:"""
       cd {params.output_dir};
       echo {input.flnc_bam};
       ls {input.flnc_bam} > {output.merged_bam};
       isoseq3 cluster {output.merged_bam} {params.prefix}_clustered.bam --verbose --use-qvs;
       gunzip {params.prefix}_clustered.hq.fasta.gz;
    """

rule fasta2fastq:
    input:
       clustered_fasta = config["isoseq_output_dir"] + "/CLUSTER/" + config["filename"] + "_clustered.hq.fasta"
    output:
       clustered_fastq = config["isoseq_output_dir"] + "/CLUSTER/" + config["filename"] + "_clustered.hq.fastq"
    params:
       cupcake_sequence = "/gpfs/mrc0/projects/Research_Project-MRC148213/sl693/softwares/Post_Isoseq3/cDNA_Cupcake/sequence"
    conda:
       "sqanti2_py3_snakemake.yaml"
    shell:"""
       python {params.cupcake_sequence}/fa2fq.py {input.clustered_fasta} > {output.clustered_fastq}
    """

#################################### Post-IsoSeq3
##### Mapping with Minimap2

rule map_reads:
    input:
       fastq = config["isoseq_output_dir"] + "/CLUSTER/" + config["filename"] + "_clustered.hq.fastq"
    output:
       mapped_sam = config["post_isoseq_output_dir"] + "/MAPPING/" + config["filename"] + ".clustered.hq.fastq.sam",
       log_file = config["post_isoseq_output_dir"] + "/MAPPING/" + config["filename"] + ".clustered.hq.fastq.sam.log"
    conda:
       "sqanti2_py3_snakemake.yaml"
    params:
       reference = "/gpfs/mrc0/projects/Research_Project-MRC148213/sl693/reference_2019/mm10.mmi"
    shell:"""
       minimap2 -t 32 -ax splice -uf --secondary=no -C5 -O6,24 -B4 {params.reference} {input.fastq} > {output.mapped_sam} 2> {output.log_file}
    """

rule sort_map_reads:
    input:
        mapped_sam = config["post_isoseq_output_dir"] + "/MAPPING/" + config["filename"] + ".clustered.hq.fastq.sam"
    output:
        sorted_mapped_sam = config["post_isoseq_output_dir"] + "/MAPPING/" + config["filename"] + "clustered.hq.fastq.sorted.sam"
    conda:
       "sqanti2_py3_snakemake.yaml"
    shell:"""
       sort -k 3,3 -k 4,4n {input.mapped_sam} > {output.sorted_mapped_sam}
    """

##### TOFU Collapse
rule tofu_collapse:
    input:
        fq = config["isoseq_output_dir"] + "/CLUSTER/" + config["filename"] + "_clustered.hq.fastq",
        sorted_mapped_sam = config["post_isoseq_output_dir"] + "/MAPPING/" + config["filename"] + "clustered.hq.fastq.sorted.sam",
        clustered_report = config["isoseq_output_dir"] + "/CLUSTER/" + config["filename"] + "_clustered.cluster_report.csv"
    output:
        collapse_log_file = config["post_isoseq_output_dir"] + "/TOFU/" + config["filename"] + "_collapse.log",
        abundance_log_file = config["post_isoseq_output_dir"]  + "/TOFU/" + config["filename"] + "_abundance.log",
        filter_log_file = config["post_isoseq_output_dir"]  + "/TOFU/" + config["filename"] + "_filter.log",
        collapsed_fa = config["post_isoseq_output_dir"]  + "/TOFU/" + config["filename"] + ".collapsed.filtered.rep.fa"
    params:
        output_dir = config["post_isoseq_output_dir"] + "/TOFU/",
        prefix = config["filename"],
        cupcake = "/gpfs/mrc0/projects/Research_Project-MRC148213/sl693/softwares/Post_Isoseq3/cDNA_Cupcake/cupcake/tofu"
    conda:
       "sqanti2_py3_snakemake.yaml"
    shell:"""
       cd {params.output_dir};
       python {params.cupcake}/collapse_isoforms_by_sam.py --fq --input {input.fq} -s {input.sorted_mapped_sam} --dun-merge-5-shorter -o {params.prefix} &> {output.collapse_log_file};
       python {params.cupcake}/get_abundance_post_collapse.py {params.prefix}.collapsed {input.clustered_report} 2> {output.abundance_log_file};
       python {params.cupcake}/filter_away_subset.py {params.prefix}.collapsed 2> {output.filter_log_file};
       seqtk seq -a {params.prefix}.collapsed.filtered.rep.fq > {output.collapsed_fa}
    """
